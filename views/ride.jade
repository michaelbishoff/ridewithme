extends layout

block content
    div(style="width:50%;padding-left:1%;")
      h1(style="color:white") Preview
        .progress(style="display:none;")
          .progress-bar(role="progressbar", aria-valuenow="0", aria-valuemin="0", aria-valuemax="1")
      #hyperlapse(style="display:none;")
    div(type="hidden")#rideId #{rideId}
    .container.container-narrow(style="position:absolute;width:35%;top:5%;right:1%;float:right;")
      a.ride-listing-anchor(href="#")
       .ride-listing.thumbnail
          .row
            .col-xs-12
              .ride-listing-header
                h2#title Adventure to Highway One
                p
                  span#difficulty.label.label-danger
                  span#distance.label.label-default
                  span#tags.label.label-warning
              .ride-listing-content
                hr
                .location
                  p#to
                  p#from
                hr
                p #[strong Who else is riding?]
                p
                  img.img-responsive.img-circle(src="https://pbs.twimg.com/profile_images/606056698420158464/7U4FvinA.png", style="max-width:50px;margin-right:5px;display:inline-block;")
                  img.img-responsive.img-circle(src="https://pbs.twimg.com/profile_images/606056698420158464/7U4FvinA.png", style="max-width:50px;margin-right:5px;display:inline-block;")
                  img.img-responsive.img-circle(src="https://pbs.twimg.com/profile_images/606056698420158464/7U4FvinA.png", style="max-width:50px;margin-right:5px;display:inline-block;")
                  img.img-responsive.img-circle(src="https://pbs.twimg.com/profile_images/606056698420158464/7U4FvinA.png", style="max-width:50px;margin-right:5px;display:inline-block;")
                  img.img-responsive.img-circle(src="https://pbs.twimg.com/profile_images/606056698420158464/7U4FvinA.png", style="max-width:50px;margin-right:5px;display:inline-block;")
    #map(style="position:absolute;bottom:1%;right:1%;width:35%;height:35%;float:right;")

    script(src="http://www.parsecdn.com/js/parse-1.5.0.min.js")
    script(src="/javascripts/key.js")
    script(src="/javascripts/GSVPano.min.js")
    script(src="/javascripts/three.min.js")
    script(src="/javascripts/hyperlapse.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.6.0/underscore-min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenLite.min.js")  
    script(src="/javascripts/StreetviewSequence.js")
    script(src="https://cdn.socket.io/socket.io-1.3.5.js")
    script.
        var distance;
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
              zoom: 10,
              center: {lat: 37.530, lng:-122.112} // Bae Area
            });
            
            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer({
              map: map,
            });

            
            //3SxhEeyL0n
            var RidePath = Parse.Object.extend("RidePath");
            var query = new Parse.Query(RidePath);
            var parsedRide;
            query.get(document.getElementById("rideId").innerHTML, {
              success: function(ride) {
                // The object was retrieved successfully.
                  parsedRide = parseRide(JSON.parse(ride.get("ride")));
                  displayRoute(parsedRide["start"], parsedRide["end"], directionsService, directionsDisplay, parsedRide["waypoints"]);
                  document.getElementById("title").innerHTML = ride.get("rideTitle");
                  document.getElementById("from").innerHTML = "<strong>From: </strong>" + ride.get("from");
                  document.getElementById("to").innerHTML = "<strong>To: </strong>" + ride.get("to");
                  distance = ride.get("distance");
                  document.getElementById("distance").innerHTML = distance + " km";
                  document.getElementById("tags").innerHTML = ride.get("tags");
                  document.getElementById("difficulty").innerHTML = ride.get("difficulty");
              },
              error: function(object, error) {
                // The object was not retrieved successfully.
                // error is a Parse.Error with an error code and message.
              }
            });
        }
        
        function displayRoute(origin, destination, service, display, waypoints) {
          service.route({
            origin: origin,
            destination: destination,
            waypoints: waypoints,
            travelMode: google.maps.TravelMode.DRIVING,
            avoidTolls: true
          }, function(response, status) {
            if (status === google.maps.DirectionsStatus.OK) {
              display.setDirections(response);
              
              var routeSequence = StreetviewSequence('#hyperlapse', {
                route: display.directions,
                duration: distance * 500,
                loop: false,
                width: 593,
                height: 876,
                key: 'AIzaSyDBX-55LuU2jwLxHuqqK5PN4o--O-E4SmU',
              });

              routeSequence.progress(function(p) {
                $('.progress').show();
                $('.progress-bar').attr('style', 'width:' + p * 100 + '%;');
              })

              routeSequence.done(function(player) {
                $('#hyperlapse').show();
                player.play();
              });
              
            } else {
              alert('Could not display directions due to: ' + status);
            }
          });
        }

        function parseRide(ride) {
            var parsedWaypoints = [];
            for(var i=0; i < ride["waypoints"].length; i++) {
                parsedWaypoints[i] = {'location': new google.maps.LatLng(ride["waypoints"][i][0], ride["waypoints"][i][1]),'stopover':false };
            }

            return {"start": ride.start, "end": ride.end, "waypoints": parsedWaypoints};
        }



    script(src="https://maps.googleapis.com/maps/api/js?signed_in=true&callback=initMap")